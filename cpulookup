#! /bin/sh
cpudata=".passmark.cpudata"
videocarddata=".passmark.videocard"
cpu=0;
video=0;
update=0;
_print_help(){
	echo "-v <video card model> 	: look up the video card information."
	echo "-s <cpu model>		: look up the model information."
	echo "-u 					: update cpu information database."
	echo "Example usage: ./cpulookup -s <cpu model>"
	exit 0
}
while getopts "s:v:uh" flag
do
	case $flag in
		"v")	video=$OPTARG;;
		"u")    update=1;;
		"h")    _print_help;;
		"s")    cpu=$OPTARG;;
	esac
done

_update(){
	echo "Updating cpu database..."
	curl http://www.cpubenchmark.net/cpu_list.php > $cpudata
	echo "Updating video card database..."
	curl www.videocardbenchmark.net/gpu_list.php > $videocarddata
	echo "Database update complete.";
	if [ $cpu -eq 2699 ] && [ $video -eq 980 ]; then
		exit 0
	fi
}
if [ $update -eq 1 ]; then
	_update ;
fi
#starts to look for specify model information.
if [ -e $cpudata ]; then
	if ! [ $cpu -eq 0 ]; then
	cat $cpudata |grep -i $cpu | sed 's/</>/g' |\
	cut -d">" -f 7,13,17 |awk 'BEGIN{FS=">"}\
	{printf("\t%s\tscore:%d\trank:%d\n",$1,$2,$3)}'
	fi
else
	echo "cpu database missing."
	echo "If this is the first time you run this script. Please type ./cpulookup -u to build cpu database."
	echo "You can type ./cpulookup -h to see more help."
fi
if [ -e $videocarddata ]; then
	if ! [ $video -eq 0 ]; then
	cat $videocarddata |grep -i --color=auto  $video | sed 's/</>/g' |\
	cut -d">" -f 7,13,17 |awk 'BEGIN{FS=">"}\
	{printf("\t%s\tscore:%d\trank:%d\n",$1,$2,$3)}'
	fi
else
	echo "video card database missing."
	echo "If this is the first time you run this script. Please type ./cpulookup -u to build cpu database."
	echo "You can type ./cpulookup -h to see more help."
fi
